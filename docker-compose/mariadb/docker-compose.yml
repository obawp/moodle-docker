services:
  web:
    runtime: runc
    image: ${REPO}-${WEBSERVER}
    container_name: ${STACK_NAME}_web
    restart: always
    # ports:
    #   - "${HOST_IP}:${WEB_PORT}:${WEB_PORT}"
    #   - "${HOST_IP}:${WEBS_PORT}:${WEBS_PORT}"
    volumes:
      - ${STACK_SRC}:/var/www/html
      - ./config/moodle/config.mariadb.php:/var/www/html/config.php
      - ${STACK_VOLUME_WEB}/moodle/data:/var/www/moodledata
      - ${STACK_VOLUME_WEB}/phpunit/moodle/data:/var/www/phpu_moodledata
      - ${STACK_VOLUME_WEB}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME_WEB}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    environment:
      - MARIADB_HOST=${STACK_NAME}_db
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - MARIADB_PREFIX=${MARIADB_PREFIX}
      - MARIADB_PORT=${MARIADB_PORT}
      - FORCE_DEBUG=${FORCE_DEBUG}
      - ENABLE_CRON=${ENABLE_CRON}
      - WEBSERVER=${WEBSERVER}
      - WEBSERVER_MEMORY=${WEBSERVER_MEMORY}
      - WEBSERVER_TIMEOUT=${WEBSERVER_TIMEOUT}
      - WEB_PORT=${WEB_PORT}
      - WEBS_PORT=${WEBS_PORT}
      - DOMAIN=${DOMAIN}
      - CERT_COUNTRY=${CERT_COUNTRY}
      - CERT_STATE=${CERT_STATE}
      - CERT_CITY=${CERT_CITY}
      - CERT_ORG=${CERT_ORG}
      - CERT_ORG_UNIT=${CERT_ORG_UNIT}
      - SERVERURL=${SERVERURL}
      - WWWROOT=${WWWROOT}
      - TZ=${TZ}
      - PHPUNIT_ENABLED=${PHPUNIT_ENABLED}
      - PHPU_MARIADB_PREFIX=${PHPU_MARIADB_PREFIX}
      - PHPU_MARIADB_DATABASE=${PHPU_MARIADB_DATABASE}
      - PHPU_MARIADB_USER=${PHPU_MARIADB_USER}
      - PHPU_MARIADB_PASSWORD=${PHPU_MARIADB_PASSWORD}
    depends_on:
      - db
    networks:
      - moodle_network
      - certbot_network
      - db_network
      - db_phpunit_network
      - db_slave_network
      - traefik_overlay
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.${STACK_NAME}_web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${STACK_NAME}_web.service=${STACK_NAME}_web_serv"
      - "traefik.http.services.${STACK_NAME}_web_serv.loadbalancer.server.port=80"
      - "traefik.http.services.${STACK_NAME}_web_serv.loadbalancer.server.scheme=http"
      - "traefik.http.routers.${STACK_NAME}_web.entrypoints=web"

      - "traefik.http.routers.${STACK_NAME}_webs.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${STACK_NAME}_webs.service=${STACK_NAME}_webs_serv"
      - "traefik.http.services.${STACK_NAME}_webs_serv.loadbalancer.server.port=443"
      - "traefik.http.services.${STACK_NAME}_webs_serv.loadbalancer.server.scheme=https"
      - "traefik.http.routers.${STACK_NAME}_webs.entrypoints=webs"
      - "traefik.http.routers.${STACK_NAME}_webs.tls=true"
      # - "traefik.http.routers.${STACK_NAME}_webs.tls.certresolver=cloudflare"
      - "traefik.http.routers.${STACK_NAME}_webs.tls.domains[0].main=${HOSTNAME}"
      - "traefik.http.routers.${STACK_NAME}_webs.tls.domains[0].sans=*.${HOSTNAME}"
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  certbot:
    runtime: runc
    image: certbot/certbot:latest
    container_name: ${STACK_NAME}_certbot
    restart: always
    networks:
      - certbot_network
    depends_on:
      - web
    volumes:
      - ${STACK_VOLUME_WEB}/moodle/certbot/www/:/var/www/certbot/:rw
      - ${STACK_VOLUME_WEB}/moodle/certbot/conf/:/etc/letsencrypt/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
          
  db:
    runtime: runc
    # image: mariadb:10.6
    build:
      context: ./docker-files/db/mariadb
    container_name: ${STACK_NAME}_db
    restart: always
    # ports:
    #   - "${MARIADB_DB_PORT}:3306"
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
      - TZ=${TZ}
      - --character-set-server=utf8mb4 
      - --collation-server=utf8mb4_unicode_ci
    volumes:
      - ${STACK_VOLUME_DB}/master/${DBTYPE}/data:/var/lib/mysql
      - ./config/db/master/mariadb/my.cnf:/etc/mysql/conf.d/my.local.cnf
      - ./config/db/master/mariadb/init.sql.template:/init.sql.template
      - ./config/db/master/mariadb/custom-docker-entrypoint.sh:/custom-docker-entrypoint.sh
    entrypoint: ["/custom-docker-entrypoint.sh"]
    networks:
      - db_network
      - pma_network
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
  pma:
    runtime: runc
    image: phpmyadmin/phpmyadmin
    container_name: ${STACK_NAME}_phpmyadmin
    restart: always
    # ports:
    #   - "${HOST_IP}:${MARIADB_PMA_PORT}:80"
    #   - "${HOST_IP}:${MARIADB_PMAS_PORT}:443"
    environment:
      - PMA_ARBITRARY=1
      # - PMA_HOST=db

      # Careful: Uncomment these will expose your phpmyadmin login.
      # - PMA_USER=${MARIADB_USER}
      # - PMA_PASSWORD=${MARIADB_PASSWORD}
      # - PMA_DATABASE=${MARIADB_DATABASE}
      # - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    command: >
      sh -c "sed 's|/etc/ssl/certs/ssl-cert-snakeoil.pem|/etc/letsencrypt/${DOMAIN}/fullchain.pem|g' /etc/apache2/sites-available/default-ssl.conf > /tmp/default-ssl.conf &&
            sed -i 's|/etc/ssl/private/ssl-cert-snakeoil.key|/etc/letsencrypt/${DOMAIN}/privkey.pem|g' /tmp/default-ssl.conf &&
            mv /tmp/default-ssl.conf /etc/apache2/sites-available/default-ssl.conf &&
            if [ ! -f /etc/phpmyadmin/config.secret.inc.php ]; then
              echo \"<?php\\n\\\$$cfg['blowfish_secret'] = '$(php -r 'echo bin2hex(random_bytes(32));')';\" > /etc/phpmyadmin/config.secret.inc.php;
            fi && 
            apache2ctl -D FOREGROUND &
            while true; do
                sleep 12h
                apache2ctl graceful
            done
        "
    depends_on:
      - db
    networks:
      - pma_network
      - traefik_overlay
    volumes:
      - ${STACK_VOLUME_WEB}/moodle/certbot/conf/live/:/etc/letsencrypt/:ro
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.${STACK_NAME}_pma.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${STACK_NAME}_pma.service=${STACK_NAME}_pma_serv"
      - "traefik.http.services.${STACK_NAME}_pma_serv.loadbalancer.server.port=80"
      - "traefik.http.routers.${STACK_NAME}_pma.entrypoints=pma"

      - "traefik.http.routers.${STACK_NAME}_pmas.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.${STACK_NAME}_pmas.service=${STACK_NAME}_pmas_serv"
      - "traefik.http.services.${STACK_NAME}_pmas_serv.loadbalancer.server.port=443"
      - "traefik.http.services.${STACK_NAME}_pmas_serv.loadbalancer.server.scheme=https"
      - "traefik.http.routers.${STACK_NAME}_pmas.entrypoints=pmas"
      - "traefik.http.routers.${STACK_NAME}_pmas.tls=true"
      # - "traefik.http.routers.${STACK_NAME}_aaps.tls.certresolver=cloudflare"
      - "traefik.http.routers.${STACK_NAME}_pmas.tls.domains[0].main=${HOSTNAME}"
      - "traefik.http.routers.${STACK_NAME}_pmas.tls.domains[0].sans=*.${HOSTNAME}"
    deploy:
      resources:
        limits:
          cpus: ${CPUS}
          memory: ${MEMORY}
networks:
  moodle_network:
  certbot_network:
  pma_network:
    external: true
    name: ${STACK_NAME}_pma_network
  db_network:
  db_phpunit_network:
    external: true
    name: ${STACK_NAME}_db_phpunit_network
  db_slave_network:
    external: true
    name: ${STACK_NAME}_db_slave_network
  traefik_overlay:
    external: true
